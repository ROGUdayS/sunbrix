// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Project {
  id            String   @id @default(cuid())
  title         String   @db.VarChar(255)
  location      String   @db.VarChar(100)
  year          String   @db.VarChar(4)  // Project year (e.g., "2024")
  plot_size     String   @map("plot_size") @db.VarChar(50)
  facing        String   @db.VarChar(50)
  description   String   @db.Text
  specifications Json    @default("{}")
  images        String[]
  active        Boolean  @default(true)
  created_at    DateTime @default(now()) @map("created_at")
  updated_at    DateTime @updatedAt @map("updated_at")

  @@map("projects")
}

model City {
  id             String   @id @default(cuid())
  name           String   @unique @db.VarChar(100)
  active         Boolean  @default(true)
  created_at     DateTime @default(now()) @map("created_at")
  updated_at     DateTime @updatedAt @map("updated_at")

  // Relations
  packages       Package[]

  @@map("cities")
}

model Package {
  id           String   @id @default(cuid())
  city_id      String   @map("city_id")
  name         String   @db.VarChar(100) // Standard, Premium, Luxury
  price        Decimal  @db.Decimal(10, 2)
  package_data Json?    @map("package_data") // JSON structure for simplified package management
  active       Boolean  @default(true)
  created_at   DateTime @default(now()) @map("created_at")
  updated_at   DateTime @updatedAt @map("updated_at")

  // Relations
  city         City     @relation(fields: [city_id], references: [id], onDelete: Cascade)
  sections     PackageSection[]

  @@map("packages")
}

model PackageSection {
  id          String   @id @default(cuid())
  package_id  String   @map("package_id")
  title       String   @db.VarChar(255)
  order       Int      @default(0)
  active      Boolean  @default(true)
  created_at  DateTime @default(now()) @map("created_at")
  updated_at  DateTime @updatedAt @map("updated_at")

  // Relations
  package     Package  @relation(fields: [package_id], references: [id], onDelete: Cascade)
  items       PackageSectionItem[]

  @@map("package_sections")
}

model PackageSectionItem {
  id                String   @id @default(cuid())
  section_id        String   @map("section_id")
  content           String   @db.Text
  order             Int      @default(0)
  active            Boolean  @default(true)
  created_at        DateTime @default(now()) @map("created_at")
  updated_at        DateTime @updatedAt @map("updated_at")

  // Relations
  section           PackageSection @relation(fields: [section_id], references: [id], onDelete: Cascade)

  @@map("package_section_items")
}

model Lead {
  id         String   @id @default(cuid())
  name       String   @db.VarChar(255)
  email      String   @db.VarChar(255)
  phone      String   @db.VarChar(20)
  city       String   @db.VarChar(100)
  source     String   @default("website") @db.VarChar(50)
  status     String   @default("new") @db.VarChar(20)
  email_sent Boolean  @default(false) @map("email_sent")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")

  @@map("leads")
}

model EmailTemplate {
  id           String   @id @default(cuid())
  name         String   @unique @db.VarChar(100)
  subject      String   @db.VarChar(255)
  body         String   @db.Text
  category     String   @db.VarChar(50) // e.g., "form_submission", "follow_up", "welcome"
  active       Boolean  @default(true)
  created_at   DateTime @default(now()) @map("created_at")
  updated_at   DateTime @updatedAt @map("updated_at")

  @@map("email_templates")
}

model CompanySettings {
  id                    String   @id @default(cuid())
  company_name          String   @map("company_name") @db.VarChar(255)
  contact_email         String   @map("contact_email") @db.VarChar(255)
  contact_phone         String   @map("contact_phone") @db.VarChar(50)
  
  // Social Media Settings
  show_facebook         Boolean  @default(false) @map("show_facebook")
  facebook_url          String?  @map("facebook_url") @db.VarChar(500)
  show_instagram        Boolean  @default(false) @map("show_instagram") 
  instagram_url         String?  @map("instagram_url") @db.VarChar(500)
  show_google           Boolean  @default(false) @map("show_google")
  google_url            String?  @map("google_url") @db.VarChar(500)
  show_youtube          Boolean  @default(false) @map("show_youtube")
  youtube_url           String?  @map("youtube_url") @db.VarChar(500)
  
  // Legal Documents
  terms_conditions      String?  @map("terms_conditions") @db.Text
  privacy_policy        String?  @map("privacy_policy") @db.Text
  
  created_at            DateTime @default(now()) @map("created_at")
  updated_at            DateTime @updatedAt @map("updated_at")

  @@map("company_settings")
}